/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;
import Modelo.*;
import Controlador.*;
import java.awt.DisplayMode;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.apache.jena.ontology.OntClass;
import org.apache.jena.ontology.OntModel;
import org.apache.jena.ontology.OntModelSpec;
import org.apache.jena.ontology.OntProperty;
import org.apache.jena.rdf.model.ModelFactory;
import org.apache.jena.util.FileManager;
import org.apache.jena.util.iterator.ExtendedIterator;
import org.apache.jena.util.iterator.Filter;

/**
 *
 * @author Azul
 */
public class ModificarOntologia extends javax.swing.JFrame {
    
    private MongoController mongo;
    private FusekiController fuseki;
    private ModelController model;
    private JTree arbol;
    private TDBController tdb;
    /**
     * Creates new form ModificarOntolgia
     * @param fc
     * @param mc
     * @param m
     */
    public ModificarOntologia(FusekiController fc, MongoController mc, ModelController m, JTree arb, TDBController tc) {
        initComponents();
        this.setLocationRelativeTo(null);  
        
        this.model=m;
        this.mongo=mc;
        this.fuseki=fc;
        this.tdb=tc;
        this.arbol= arb;
        
        addTreeListener();
        
        this.scrollPane.getViewport().add(arbol);
        this.setPropertyList();
        this.pack();
        
    }
    
        
//    public void setTree(DefaultMutableTreeNode raiz, ArrayList <Clase> raices){
//       
//        for (Clase c: raices){
//                c.setSubClasses();
//                DefaultMutableTreeNode node = new DefaultMutableTreeNode(c);
//                if (!node.equals(raiz)){
//                    raiz.add(node);
//                }
//                
//                if (!c.isLeaf()){
//                    ArrayList<Clase> hijos= c.getHijos();
//                    setTree(node, hijos);
//                }
//                    
//        }
//        
//    }
//    public void setTreeIcons(){
//        arbol.setRootVisible(false);
//        DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
//        ImageIcon leafIcon = new ImageIcon(getClass().getResource("/price-tag.png"));
//        ImageIcon rootClosedIcon = new ImageIcon(getClass().getResource("/closefolder.png"));
//        ImageIcon rootOpenIcon = new ImageIcon(getClass().getResource("/openfolder.png"));
//        renderer.setLeafIcon(leafIcon);
//        renderer.setClosedIcon(rootClosedIcon);
//        renderer.setOpenIcon(rootOpenIcon);
//        arbol.setCellRenderer(renderer);
//    }
    public void setPropertyList(){
        ExtendedIterator <?extends OntProperty> prop= this.model.getProperties();
        
        DefaultListModel listModel = new DefaultListModel();
        
        for (OntProperty p: prop.toList()){
            listModel.addElement(p.getLabel(null));
        }
        
        this.propertyList.setModel(listModel);
        
    }
    public void addTreeListener(){
        arbol.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() {
        @Override
        public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) arbol.getLastSelectedPathComponent();
        comments.setText(((Clase)selectedNode.getUserObject()).getComment());
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JPanel();
        propiedades = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        comments = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        propertyList = new javax.swing.JList<>();
        eliminarPropied = new javax.swing.JButton();
        agregarPropiedad = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        agregarClase = new javax.swing.JButton();
        eliminarClase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contenedor.setBackground(new java.awt.Color(173, 199, 228));

        propiedades.setBackground(new java.awt.Color(173, 199, 228));

        jScrollPane1.setBackground(new java.awt.Color(173, 199, 228));

        comments.setEditable(false);
        comments.setBackground(new java.awt.Color(173, 199, 228));
        comments.setColumns(20);
        comments.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        comments.setLineWrap(true);
        comments.setRows(5);
        comments.setWrapStyleWord(true);
        jScrollPane1.setViewportView(comments);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel1.setText("Comments:");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel3.setText("Propiedades asociadas a los productos:");

        jScrollPane2.setViewportView(propertyList);

        eliminarPropied.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        eliminarPropied.setIcon(new javax.swing.ImageIcon(getClass().getResource("/error.png"))); // NOI18N
        eliminarPropied.setText("Eliminar propiedad");
        eliminarPropied.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 2, true));
        eliminarPropied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPropiedActionPerformed(evt);
            }
        });

        agregarPropiedad.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        agregarPropiedad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        agregarPropiedad.setText(" Agregar propiedad");
        agregarPropiedad.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 2, true));
        agregarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPropiedadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout propiedadesLayout = new javax.swing.GroupLayout(propiedades);
        propiedades.setLayout(propiedadesLayout);
        propiedadesLayout.setHorizontalGroup(
            propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propiedadesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(propiedadesLayout.createSequentialGroup()
                        .addGroup(propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(propiedadesLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(agregarPropiedad, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addComponent(eliminarPropied, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        propiedadesLayout.setVerticalGroup(
            propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propiedadesLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propiedadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addGroup(propiedadesLayout.createSequentialGroup()
                        .addComponent(agregarPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarPropied, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        scrollPane.setBackground(new java.awt.Color(173, 199, 228));
        scrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel2.setText("Clases:");

        agregarClase.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        agregarClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        agregarClase.setText(" Agregar clase");
        agregarClase.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 2, true));
        agregarClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarClaseActionPerformed(evt);
            }
        });

        eliminarClase.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        eliminarClase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/error.png"))); // NOI18N
        eliminarClase.setText("Eliminar clase");
        eliminarClase.setBorder(new javax.swing.border.LineBorder(java.awt.SystemColor.activeCaption, 2, true));
        eliminarClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarClaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenedorLayout = new javax.swing.GroupLayout(contenedor);
        contenedor.setLayout(contenedorLayout);
        contenedorLayout.setHorizontalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(propiedades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(eliminarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        contenedorLayout.setVerticalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(contenedorLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(propiedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarClase, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPropiedadActionPerformed
       AgregarPropiedad ap= new AgregarPropiedad(model, fuseki, tdb, arbol, mongo);
       ap.setVisible(true);
       this.setVisible(false);
       
    }//GEN-LAST:event_agregarPropiedadActionPerformed

    private void agregarClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarClaseActionPerformed
        if (arbol.getLastSelectedPathComponent()==null){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una clase", "Error",  JOptionPane.ERROR_MESSAGE);
        }
        else {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) arbol.getLastSelectedPathComponent();
            AgregarClase ac = new AgregarClase (model, fuseki, tdb, mongo, (Clase)selectedNode.getUserObject(), this.arbol);
            ac.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_agregarClaseActionPerformed

    private void eliminarClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarClaseActionPerformed
        if (arbol.getLastSelectedPathComponent()==null){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una clase", "Error",  JOptionPane.ERROR_MESSAGE);
        }
        else {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) arbol.getLastSelectedPathComponent();
            Clase c = (Clase)selectedNode.getUserObject();
            this.model.removeClass(c.getClase());
            tdb.updateData(model.getModel().getBaseModel());
            this.fuseki=new FusekiController(3030, tdb.getDataset(), "/ont");
            DefaultTreeModel model = (DefaultTreeModel) arbol.getModel();

            TreePath[] paths = arbol.getSelectionPaths();
            if (paths != null) {
                for (TreePath path : paths) {
                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) 
                    path.getLastPathComponent();
                    if (node.getParent() != null) {
                        model.removeNodeFromParent(node);
                        }
                }
            }
            
        }
    }//GEN-LAST:event_eliminarClaseActionPerformed

    private void eliminarPropiedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPropiedActionPerformed
        if(this.propertyList.getSelectedValue().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una propiedad", "Error",  JOptionPane.ERROR_MESSAGE);
        }
        else{
            this.model.removeProperty(this.propertyList.getSelectedValue());
            tdb.updateData(model.getModel().getBaseModel());
            this.fuseki=new FusekiController(3030, tdb.getDataset(), "/ont");
            this.setPropertyList();
        }
    }//GEN-LAST:event_eliminarPropiedActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ModificarOntolgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ModificarOntolgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ModificarOntolgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ModificarOntolgia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        ModelController model= new ModelController("C:\\Users\\ale_b\\Desktop\\gpc.owl",OntModelSpec.OWL_MEM );
//        model.cargarOnt();
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ModificarOntolgia(model);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarClase;
    private javax.swing.JButton agregarPropiedad;
    public javax.swing.JTextArea comments;
    private javax.swing.JPanel contenedor;
    private javax.swing.JButton eliminarClase;
    private javax.swing.JButton eliminarPropied;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> propertyList;
    public javax.swing.JPanel propiedades;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
